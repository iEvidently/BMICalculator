/*!
 * jQuery Smart Banner
 * Copyright (c) 2012 Arnold Daniels <arnold@jasny.net>
 * Based on 'jQuery Smart Web App Banner' by Kurt Zenisek @ kzeni.com

 */
(function (a, b) { if (typeof define == "function" && define.amd) { define(["jquery"], b) } else { b(a.jQuery) } })(this, function (e) { var c = navigator.userAgent; var d = /Edge/i.test(c); var a = function (g) { this.origHtmlMargin = parseFloat(e("html").css("margin-top")); this.options = e.extend({}, e.smartbanner.defaults, g); var f = navigator.standalone; if (this.options.force) { this.type = this.options.force } else { if (c.match(/Windows Phone/i) !== null && c.match(/Edge|Touch/i) !== null) { this.type = "windows" } else { if (c.match(/iPhone|iPod/i) !== null || (c.match(/iPad/) && this.options.iOSUniversalApp)) { if (c.match(/Safari/i) !== null && (c.match(/CriOS/i) !== null || c.match(/FxiOS/i) != null || window.Number(c.substr(c.indexOf("OS ") + 3, 3).replace("_", ".")) < 6)) { this.type = "ios" } } else { if (c.match(/\bSilk\/(.*\bMobile Safari\b)?/) || c.match(/\bKF\w/) || c.match("Kindle Fire")) { this.type = "kindle" } else { if (c.match(/Android/i) !== null) { this.type = "android" } } } } } if (!this.type || f || this.getCookie("sb-closed") || this.getCookie("sb-installed")) { return } this.scale = this.options.scale == "auto" ? e(window).width() / window.screen.width : this.options.scale; if (this.scale < 1) { this.scale = 1 } var h = e(this.type == "android" ? 'meta[name="google-play-app"]' : (this.type == "ios" ? 'meta[name="apple-itunes-app"]' : (this.type == "kindle" ? 'meta[name="kindle-fire-app"]' : 'meta[name="msApplication-ID"]'))); if (!h.length) { return } if (this.type == "windows") { if (d) { this.appId = e('meta[name="msApplication-PackageEdgeName"]').attr("content") } if (!this.appId) { this.appId = e('meta[name="msApplication-PackageFamilyName"]').attr("content") } } else { var i = /app-id=([^\s,]+)/.exec(h.attr("content")); if (i) { this.appId = i[1] } else { return } } this.title = this.options.title ? this.options.title : (h.data("title") || e("title").text().replace(/\s*[|\-·].*$/, "")); this.author = this.options.author ? this.options.author : (h.data("author") || (e('meta[name="author"]').length ? e('meta[name="author"]').attr("content") : window.location.hostname)); this.iconUrl = h.data("icon-url"); this.price = h.data("price"); if (typeof this.options.onInstall == "function") { this.options.onInstall = this.options.onInstall } else { this.options.onInstall = function () { } } if (typeof this.options.onClose == "function") { this.options.onClose = this.options.onClose } else { this.options.onClose = function () { } } this.create(); this.show(); this.listen() }; a.prototype = { constructor: a, create: function () { var i; var h = this.price || this.options.price; var g = this.options.url || (function () { switch (this.type) { case "android": return "market://details?id="; case "kindle": return "amzn://apps/android?asin="; case "windows": return d ? "ms-windows-store://pdp/?productid=" : "ms-windows-store:navigate?appid=" } return "https://itunes.apple.com/" + this.options.appStoreLanguage + "/app/id" }.call(this) + this.appId); var k = !h ? "" : (function () { var l = h + " - "; switch (this.type) { case "android": return l + this.options.inGooglePlay; case "kindle": return l + this.options.inAmazonAppStore; case "windows": return l + this.options.inWindowsStore } return l + this.options.inAppStore }.call(this)); var j = this.options.iconGloss == null ? (this.type == "ios") : this.options.iconGloss; if (this.type == "android" && this.options.GooglePlayParams) { g += "&referrer=" + this.options.GooglePlayParams } var f = ('<div id="smartbanner" class="' + this.type + '"><div class="sb-container"><a href="#" class="sb-close">×</a><span class="sb-icon"></span><div class="sb-info"><strong>' + this.title + "</strong><span>" + this.author + "</span><span>" + k + '</span></div><a href="' + g + '" class="sb-button"><span>' + this.options.button + "</span></a></div></div>"); if (this.options.layer) { e(this.options.appendToSelector).append(f) } else { e(this.options.appendToSelector).prepend(f) } if (this.options.icon) { i = this.options.icon } else { if (this.iconUrl) { i = this.iconUrl } else { if (e('link[rel="apple-touch-icon-precomposed"]').length > 0) { i = e('link[rel="apple-touch-icon-precomposed"]').attr("href"); if (this.options.iconGloss == null) { j = false } } else { if (e('link[rel="apple-touch-icon"]').length > 0) { i = e('link[rel="apple-touch-icon"]').attr("href") } else { if (e('meta[name="msApplication-TileImage"]').length > 0) { i = e('meta[name="msApplication-TileImage"]').attr("content") } else { if (e('meta[name="msapplication-TileImage"]').length > 0) { i = e('meta[name="msapplication-TileImage"]').attr("content") } } } } } } if (i) { e("#smartbanner .sb-icon").css("background-image", "url(" + i + ")"); if (j) { e("#smartbanner .sb-icon").addClass("gloss") } } else { e("#smartbanner").addClass("no-icon") } this.bannerHeight = e("#smartbanner").outerHeight() + 2; if (this.scale > 1) { e("#smartbanner").css("top", parseFloat(e("#smartbanner").css("top")) * this.scale).css("height", parseFloat(e("#smartbanner").css("height")) * this.scale).hide(); e("#smartbanner .sb-container").css("-webkit-transform", "scale(" + this.scale + ")").css("-msie-transform", "scale(" + this.scale + ")").css("-moz-transform", "scale(" + this.scale + ")").css("width", e(window).width() / this.scale) } e("#smartbanner").css("position", this.options.layer ? "absolute" : "static") }, listen: function () { e("#smartbanner .sb-close").on("click", e.proxy(this.close, this)); e("#smartbanner .sb-button").on("click", e.proxy(this.install, this)) }, show: function (h) { var f = e("#smartbanner"); f.stop(); if (this.options.layer) { f.animate({ top: 0, display: "block" }, this.options.speedIn).addClass("shown").show(); e(this.pushSelector).animate({ paddingTop: this.origHtmlMargin + (this.bannerHeight * this.scale) }, this.options.speedIn, "swing", h) } else { if (e.support.transition) { f.animate({ top: 0 }, this.options.speedIn).addClass("shown"); var g = function () { e("html").removeClass("sb-animation"); if (h) { h() } }; e(this.pushSelector).addClass("sb-animation").one(e.support.transition.end, g).emulateTransitionEnd(this.options.speedIn).css("margin-top", this.origHtmlMargin + (this.bannerHeight * this.scale)) } else { f.slideDown(this.options.speedIn).addClass("shown") } } }, hide: function (h) { var f = e("#smartbanner"); f.stop(); if (this.options.layer) { f.animate({ top: -1 * this.bannerHeight * this.scale, display: "block" }, this.options.speedIn).removeClass("shown"); e(this.pushSelector).animate({ paddingTop: this.origHtmlMargin }, this.options.speedIn, "swing", h) } else { if (e.support.transition) { if (this.type !== "android") { f.css("top", -1 * this.bannerHeight * this.scale).removeClass("shown") } else { f.css({ display: "none" }).removeClass("shown") } var g = function () { e("html").removeClass("sb-animation"); if (h) { h() } }; e(this.pushSelector).addClass("sb-animation").one(e.support.transition.end, g).emulateTransitionEnd(this.options.speedOut).css("margin-top", this.origHtmlMargin) } else { f.slideUp(this.options.speedOut).removeClass("shown") } } }, close: function (f) { f.preventDefault(); this.hide(); e("#smartbanner").hide(); this.setCookie("sb-closed", "true", this.options.daysHidden); this.options.onClose(f) }, install: function (f) { if (this.options.hideOnInstall) { this.hide() } this.setCookie("sb-installed", "true", this.options.daysReminder); this.options.onInstall(f) }, setCookie: function (f, h, g) { var i = new Date(); i.setDate(i.getDate() + g); h = encodeURI(h) + ((g == null) ? "" : "; expires=" + i.toUTCString()); document.cookie = f + "=" + h + "; path=/;" }, getCookie: function (g) { var h, f, k, j = document.cookie.split(";"); for (h = 0; h < j.length; h++) { f = j[h].substr(0, j[h].indexOf("=")); k = j[h].substr(j[h].indexOf("=") + 1); f = f.replace(/^\s+|\s+$/g, ""); if (f == g) { return decodeURI(k) } } return null }, switchType: function () { var f = this; this.hide(function () { f.type = f.type == "android" ? "ios" : "android"; var g = e(f.type == "android" ? 'meta[name="google-play-app"]' : 'meta[name="apple-itunes-app"]').attr("content"); f.appId = /app-id=([^\s,]+)/.exec(g)[1]; e("#smartbanner").detach(); f.create(); f.show() }) } }; e.smartbanner = function (g) { var i = e(window); var h = i.data("smartbanner"); var f = typeof g == "object" && g; if (!h) { i.data("smartbanner", (h = new a(f))) } if (typeof g == "string") { h[g]() } }; e.smartbanner.defaults = { title: null, author: null, price: "FREE", appStoreLanguage: "us", inAppStore: "On the App Store", inGooglePlay: "In Google Play", inAmazonAppStore: "In the Amazon Appstore", inWindowsStore: "In the Windows Store", GooglePlayParams: null, icon: null, iconGloss: null, button: "VIEW", url: null, scale: "auto", speedIn: 300, speedOut: 400, daysHidden: 15, daysReminder: 90, force: null, hideOnInstall: true, layer: false, iOSUniversalApp: true, appendToSelector: "body", pushSelector: "html" }; e.smartbanner.Constructor = a; function b() { var h = document.createElement("smartbanner"); var g = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }; for (var f in g) { if (h.style[f] !== undefined) { return { end: g[f] } } } return false } if (e.support.transition !== undefined) { return } e.fn.emulateTransitionEnd = function (h) { var g = false, f = this; e(this).one(e.support.transition.end, function () { g = true }); var i = function () { if (!g) { e(f).trigger(e.support.transition.end) } }; setTimeout(i, h); return this }; e(function () { e.support.transition = b() }) });